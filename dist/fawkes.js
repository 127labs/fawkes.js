!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.Fawkes=t():e.Fawkes=t()}(this,function(){return function(e){function t(o){if(n[o])return n[o].exports;var r=n[o]={exports:{},id:o,loaded:!1};return e[o].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var n={};return t.m=e,t.c=n,t.p="/",t(0)}([function(e,t,n){e.exports=n(1)},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},o=t.createEvent$=function(){var e=[],t=[],n=function(n){if(t.length){var o=t.shift();o(n)}else e.push(n)},o=function(){return e.length?Promise.resolve(e.shift()):new Promise(function(e){return t.push(e)})};return{take:o,put:n}},r=t.createSocketEvent$=function(e){var t=arguments.length<=1||void 0===arguments[1]?!1:arguments[1],n=o();return e.onOpen(function(){return n.put({type:e.endPoint+"/STATUS",payload:{status:"OPEN",connected:e.isConnected()}})}),e.onClose(function(){return n.put({type:e.endPoint+"/STATUS",payload:{status:"CLOSED",connected:e.isConnected()}})}),t&&e.onError(function(){return n.put({type:e.endPoint+"/STATUS",payload:{status:"ERROR",connected:e.isConnected()}})}),n},u=t.createPushEvent$=function(e){var t=o();return e.receive("ok",function(o){return t.put({type:e.channel.topic+"/"+e.event,payload:n({},o,{status:"OK"})})}),e.receive("error",function(o){return t.put({type:e.channel.topic+"/"+e.event,payload:n({},o,{status:"ERROR"})})}),e.receive("timeout",function(){return t.put({type:e.channel.topic+"/"+e.event,payload:{status:"TIMEOUT",response:"Networking issue. Still waiting..."}})}),t},a=t.createChannelEvent$=function(e,t){var r=o();return e.on(t,function(n){return r.put({type:e.topic+"/"+t,payload:n})}),e.onError(function(t){return r.put({type:e.topic+"/STATUS",payload:n({},t,{status:"ERROR"})})}),e.onClose(function(){return r.put({type:e.topic+"/STATUS",payload:{status:"CLOSE",response:"The channel has gone away gracefully"}})}),r};t["default"]={createEvent$:o,createSocketEvent$:r,createPushEvent$:u,createChannelEvent$:a}}])});